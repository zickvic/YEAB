% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event_extractor.R
\name{event_extractor}
\alias{event_extractor}
\title{Event extractor}
\usage{
event_extractor(dframe, ev0, ev1, evname)
}
\arguments{
\item{dframe}{data frame with events ev0 and ev1 (e.g., start of trial and reinforcement delivery)}

\item{ev0}{event ID start (where the event we want to extract begins)}

\item{ev1}{event ID stop. This event won't be returned, so keep in mind that}

\item{evname}{a string for the event name, for identification purposes. For example
if the event we want to extract is component 1 in a multiple-2 schedule,
this can be eventname = "c1", so when we extract the second
component we can row-combine both in a unique dataframe.}
}
\value{
data frame with nrows x 4 columns of time, events, cum_id and evname
}
\description{
A function to slice data based on start and stop events. This function
should be used after read_med.r, which outputs a csv of 2 columns: time and
events (in that order). Its use is exemplified at the end of the function.
}
\details{
Works by trials
}
\examples{
If we have a component starting with 5 and ending with 2 and a dataframe "df"
# we can extract the data of component "comp52" following the next steps:
# 0 - From the output of read_med.R function, load the csv file and assign to df
# 1 - source the event_extractor.R function
# 2 - use it with the appropiate arguments as follows
component52df <- event_extractor(
  dframe = df, # enter the data as the 1st arg
  ev0 = 5, ev1 = 2, # enter start and stop
  evname = "comp52"
) # enter the event's name

}
